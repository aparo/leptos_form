name: CI

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    # TODO: change to dtolnay/rust-toolchain@stable once 1.75.0 lands on stable
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@nightly
      with:
        components: clippy,rustfmt

    - uses: Swatinem/rust-cache@v2
      with:
        save-if: ${{ github.ref == 'refs/heads/main' }}
    
    - run: cargo install cargo-machete --locked

    - run: cargo install cargo-deny --locked

    - run: touch requirements.txt

    - uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        cache: "pip" # caching pip dependencies
    - run: rm requirements.txt

    - run: pip install pre-commit

    - uses: actions/checkout@v3

    - run: cargo build --all-features --verbose

    - run: cargo test --all-features --verbose
      env:
        CARGO_INCREMENTAL: 0"
        RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests"
        RUSTDOCFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests"

    - name: rust-grcov
      uses: actions-rs/grcov@v0.1

    - name: Codecov
      uses: codecov/codecov-action@v4-beta
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        # Repository upload token - get it from codecov.io. Required only for private repositories
        # token: # optional
        # Specify whether the Codecov output should be verbose
        verbose: true
        fail_ci_if_error: true

    - run: pre-commit install --hook-type pre-commit

    - run: pre-commit install --hook-type pre-push

    - run: bash .git/hooks/pre-commit

    - run: bash .git/hooks/pre-push
